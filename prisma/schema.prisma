// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId Int @id @default(autoincrement()) @map("userId")
  loginId String @map("loginId")
  password String @map("password")
  nickname String @map("nickname")
  userType String @map("userType")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@map("Users")
}

model Goods {
  goodsId Int @id @default(autoincrement()) @map("goodsId")
  goodsName String @map("goodsName")
  imageUrl String @map("imageUrl")
  price Int @map("price")
  content String @map("content") @db.Text
  likeCount Int @default(0) @map("likeCount")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  Comments Comments[]
  Orders Orders[]
  Likes Likes[]

  @@map("Goods")
}

model Comments {
  commentId Int @id @default(autoincrement()) @map("commentId")
  GoodsId Int @map("GoodsId")
  comment String @map("comment") @db.Text

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  
  Goods Goods @relation(fields: [GoodsId], references: [goodsId], onDelete: Cascade)

  @@map("Comments")
}

model Orders {
  orderId Int @id @default(autoincrement()) @map("orderId")
  GoodsId Int @map("GoodsId")
  quantity Int @default(1) @map("quantity")
  totalPrice Int @map("totalPrice")

  Good Goods @relation(fields: [GoodsId], references: [goodsId], onDelete: Cascade)

  @@map("Orders")
}

model Likes {
  likeId Int @id @default(autoincrement()) @map("likeId")
  GoodsId Int @map("GoodsId")

  Good     Goods   @relation(fields: [GoodsId], references: [goodsId], onDelete : Cascade)

  @@map("Likes")
}
